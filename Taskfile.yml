version: '3'

# We embed a generic task to run in the different directories.
# Using a local task with a variable to set the target directory also works but breaks the system
# that determines wether the source files have changed since the last run.

includes:
  std:
    taskfile: Generate.yml
    dir: vit/std
    vars: {Root: "{{.ROOT}}"}

  gui:
    taskfile: Generate.yml
    dir: gui
    vars: {Root: "{{.ROOT}}"}

  controls:
    taskfile: Generate.yml
    dir: controls
    vars: {Root: "{{.ROOT}}"}

vars:
  ROOT:
    sh: "echo $(pwd)"

output: group

tasks:
  generate:
    deps: [ check-generator-build ]
    cmds:
      - task: generate-files
  
  generate-files:
    deps: # runs them all in parallel
      - std:generate-local
      - gui:generate-local
      - controls:generate-local

  check-generator-build:
    - cmd: go vet github.com/omniskop/vitrum/vit/generator/gencmd # we use go vet to check for errors in the package
      silent: true

  build:
    deps: [ generate ]
    cmds:
      - go build