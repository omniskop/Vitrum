
Item {
    embedded enum HorizontalItemAlignment {
        AlignLeft,
        AlignHCenter,
        AlignRight,
    }

    embedded enum VerticalItemAlignment {
        AlignTop,
        AlignVCenter,
        AlignBottom,
    }

    embedded enum Flow {
        LeftToRight,
        TopToBottom,
    }

    #gen-onchange="recalculateLayout" #gen-optional property float topPadding: 0
    #gen-onchange="recalculateLayout" #gen-optional property float rightPadding: 0
    #gen-onchange="recalculateLayout" #gen-optional property float bottomPadding: 0
    #gen-onchange="recalculateLayout" #gen-optional property float leftPadding: 0
    #gen-onchange="recalculateLayout" property float padding: 0
    #gen-onchange="recalculateLayout" property float spacing: 0
    #gen-onchange="recalculateLayout" #gen-optional property float columnSpacing: 0
    #gen-onchange="recalculateLayout" #gen-optional property float rowSpacing: 0
    #gen-onchange="recalculateLayout" #gen-optional property int columns
    #gen-onchange="recalculateLayout" #gen-optional property int rows
    #gen-onchange="recalculateLayout" property HorizontalItemAlignment horizontalItemAlignment: HorizontalItemAlignment.Left
    #gen-onchange="recalculateLayout" property VerticalItemAlignment verticalItemAlignment: VerticalItemAlignment.Top
    #gen-onchange="recalculateLayout" property Flow flow: Flow.LeftToRight

    #gen-internal #gen-type="vit.LayoutList" #gen-initializer="make(vit.LayoutList)" #gen-private #gen-onchange="recalculateLayout" property any childLayouts
    #gen-onchange="childWasAdded" property any children
}